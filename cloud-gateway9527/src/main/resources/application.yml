server:
  port: 9527

spring:
  application:
     name: cloud-gateway-service
  cloud:
    gateway:
      discovery:
          locator:
             enabled: true  #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment-dyna-routh
          uri: lb://cloud-payment-service  #动态路由
          predicates:
            - Path=/pay/lb/**   #断言，路径相匹配的进行路由
            - After=2022-12-22T21:44:34.610+08:00[Asia/Shanghai]  # 在某个时间之后，才生效
#            - Cookie=username,sunsgkv  #增加cookie 验证

        - id: payment-myAge-routh            #自定义断言路由
          uri: lb://cloud-payment-service  #动态路由
          predicates:
            - Path=/pay/query/**  #断言，路径相匹配的进行路由
            - Age=18, 60      #自定义断言，限制年龄只在18~60岁之间可以访问
#        - id: payment-routh   #路由ID
#          uri:  http://localhost:8001  #匹配后提供服务的路由地址
#          predicates:
#            - Path=/pay/query/**   #断言，路径相匹配的进行路由

        - id: after_route
          uri: https://example.org
          predicates:
             - After=2022-12-20T21:44:34.610+08:00[Asia/Shanghai]  # 在某个时间之后，才生效
             - Before=2017-01-20T17:42:47.789-07:00[America/Denver] # 在某个时间之前，才生效
             - Between=2017-01-20T17:42:47.789-07:00[America/Denver], 2017-01-21T17:42:47.789-07:00[America/Denver]

        # https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-cookie-route-predicate-factory
        - id: cookie_route
          uri: https://example.org
          predicates:
              - Cookie=chocolate, ch.p  #cookie 此路径匹配具有名为coochockie的请求，其值与ch.p正则表达式匹配的请求。


        - id: header_route
          uri: https://example.org
          predicates:
            - Header=X-Request-Id, \d+  #Header 正则，请求头有X-Request-ID的属性，并且为正整数

        - id: method_route
          uri: https://example.org
          predicates:
            - Method=GET,POST  # 如果请求方法是get或post，则此路由相匹配


        - id: host_route
          uri: https://example.org
          predicates:
            - Host=**.somehost.org,**.anotherhost.org  #此谓词与匹配该模式的主机标头相匹配

        - id: query_route
          uri: https://example.org
          predicates:
            - Query=green  # 查询路由谓词工厂需要两个参数：一个必需的参数和一个可选的regexp（这是一个java正则表达式）

        - id: remoteaddr_route
          uri: https://example.org
          predicates:
            - RemoteAddr=192.168.1.1/24  #如果请求的远程地址是192.168.1.10，则此路由匹配。 This route matches if the remote address of the request was, for example, 192.168.1.10.

        - id: xforwarded_remoteaddr_route
          uri: https://example.org
          predicates:
            - XForwardedRemoteAddr=192.168.1.1/24  # This route matches if the X-Forwarded-For header contains, for example, 192.168.1.10.

        - id: weight_high
          uri: https://weighthigh.org
          predicates:
            - Weight=group1, 8   # 这条路由将把~80%的流量转发到weighthigh.org，~将20%的流量转发到weighlow.org

        - id: weight_low
          uri: https://weightlow.org
          predicates:
            - Weight=group1, 2   # 这条路由将把~80%的流量转发到weighthigh.org，~将20%的流量转发到weighlow.org

# 客户端Eureka 配置
eureka:
  instance:
    hostname: ${spring.application.name}
  client:
    #服务端是否自己注册自己，服务端是false , 客户端是true
    register-with-eureka: true
    #是否去检索服务
    fetch-registry: true
    service-url:
      #defaultZone:  localhost:8761/eureka/    #单机配置
      defaultZone:  http://eureka8761.com:8761/eureka/
      #集群配置
#     defaultZone:  http://eureka8761.com:8761/eureka/, http://eureka8762.com:8762/eureka/, http://eureka8763.com:8763/eureka/
